name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check_master:
    name: Check Master
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check if branch is up to date with target branch
        run: |
          echo "Checking if branch is up to date with main"
          git fetch origin main
          if [ "$(git rev-parse HEAD)" != "$(git rev-parse @{u})" ]; then
            echo "Branch is not up to date with main."
            exit 1
          fi

  lint_test:
    name: Lint Test
    runs-on: ubuntu-latest
    needs: check_master

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Linting the React application
        run: echo "Running Lint Test for React application"

  build_application:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint_test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Building React and Laravel applications
        run: echo "Building React and Laravel applications"

  unit_test:
    name: Unit Test
    runs-on: ubuntu-latest
    needs: build_application

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Running unit tests
        run: echo "Running unit tests for React and Laravel applications"

  load_test:
    name: Load Test
    runs-on: ubuntu-latest
    needs: build_application

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Running load tests
        run: echo "Running load tests for the application"

  sast:
    name: Static Application Security Testing (SAST)
    runs-on: ubuntu-latest
    needs: [unit_test, load_test]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Running SAST
        run: echo "Running Static Application Security Testing (SAST)"

  dast:
    name: Dynamic Application Security Testing (DAST)
    runs-on: ubuntu-latest
    needs: [unit_test, load_test]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Running DAST
        run: echo "Running Dynamic Application Security Testing (DAST)"

  build_image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: dast

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Building Docker images
        run: echo "Building Docker images for React and Laravel applications"

  push_image:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: build_image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Pushing Docker images
        run: echo "Pushing Docker images to Docker Hub"

  scan_image:
    name: Scan Docker Image
    runs-on: ubuntu-latest
    needs: push_image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Scanning Docker images
        run: echo "Scanning Docker images for vulnerabilities"

  notify_cd:
    name: Notify CD
    runs-on: ubuntu-latest
    needs: scan_image

    steps:
      - name: Trigger ArgoCD Sync
        run: echo "Notifying ArgoCD to trigger a sync"
